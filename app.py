from schema.user_input import UserInput
from model.predict import predict, model, MODEL_VERSION
from fastapi import FastAPI
from fastapi.responses import JSONResponse

# Generally generated by tools like mlflow or setuptools_scm


app = FastAPI()


# Global variable to store the model


@app.get("/")
def read_root():
    return {"message": "Insurance Premium Predictor API is running!"}


@app.get("/health")
def health_check():
    return {
        "status": "healthy",
        "version": MODEL_VERSION,
        "model_loaded": model is not None,
    }


@app.post('/predict')
def predict_premium(data: UserInput):
    # Load model lazily

    user_input = {
        'bmi': data.bmi,
        'age_group': data.age_group,
        'lifestyle_risk': data.lifestyle_risk,
        'city_tier': data.city_tier,
        'income_lpa': data.income_lpa,
        'occupation': data.occupation
    }
    
    try:

        output = predict(user_input)

        return JSONResponse(status_code=200, content={'predicted_category': output})
    except Exception as e:
        return JSONResponse(status_code=500, content={'error': str(e)})
